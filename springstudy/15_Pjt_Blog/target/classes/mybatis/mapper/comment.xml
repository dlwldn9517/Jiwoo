<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.app15.mapper.CommentMapper">

	<select id="selectCommentCount" parameterType="int" resultType="int">
		SELECT COUNT(*)
		  FROM COMMENTS
		 WHERE BLOG_NO = #{blogNo}
	</select>
	
	<insert id="insertComment" parameterType="CommentDTO">
		INSERT INTO COMMENTS
			(COMMENT_NO, BLOG_NO, CONTENT, STATE, DEPTH, GROUP_NO, CREATE_DATE)
		VALUES
			(COMMENTS_SEQ.NEXTVAL, #{blogNo}, #{content}, 1, 0, COMMENTS_SEQ.CURRVAL, SYSDATE)
	</insert>
	
	<!-- 댓글 목록 1단 계층이랑 그룹 오더가 필요 없다. 다단계일 때만 필요하다.
		같은 그룹일 때는 DEPTH 기준으로 오름차순. 0이 먼저 나오고 1이 나중에 
		GROUP_NO는 내림차순 먼저 작성한 댓글이 위로 올 수 있게
		
		댓글단 사람의 아이디나 닉네임을 가져오려면 : user 테이블과의 join이 필요
	-->
	<!-- 2단 정렬에서 CREATE_DATE DESC(대댓 최신순) 추가하므로써 3단 정렬됨 -->
	<select id="selectCommentList" parameterType="Map" resultType="CommentDTO">
		SELECT A.ROW_NUM, A.COMMENT_NO, A.BLOG_NO, A.CONTENT, A.STATE, A.DEPTH, A.GROUP_NO, A.CREATE_DATE
		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY GROUP_NO DESC, DEPTH ASC, CREATE_DATE DESC) AS ROW_NUM, COMMENT_NO, BLOG_NO, CONTENT, STATE, DEPTH, GROUP_NO, CREATE_DATE
		          FROM COMMENTS
		         WHERE BLOG_NO = #{blogNo}) A
		 WHERE A.ROW_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 삭제하는데 update로 사용, -1 : 삭제 (번호는 상관없음 내가 지정하는거) -->
	<update id="deleteComment" parameterType="int">
		UPDATE COMMENTS
		   SET STATE = -1
		 WHERE COMMENT_NO = #{commentNo}
	</update>
	
	<insert id="insertReply" parameterType="CommentDTO">
		INSERT INTO COMMENTS
			(COMMENT_NO, BLOG_NO, CONTENT, STATE, DEPTH, GROUP_NO, CREATE_DATE)
		VALUES
			(COMMENTS_SEQ.NEXTVAL, #{blogNo}, #{content}, 1, 1, #{groupNo}, SYSDATE)
	</insert>
	
</mapper>