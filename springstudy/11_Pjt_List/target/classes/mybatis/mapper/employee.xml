<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!-- mapper의 namespace를 Mapper Interface로 지정해 준다. -->
  
<mapper namespace="com.gdu.app11.mapper.EmpMapper">

	<!-- employees와 departments의 조인을 위한 resultMap -->
	<resultMap type="DeptDTO" id="DeptMap">
		<result column="DEPARTMENT_ID" property="departmentId" />
		<result column="DEPARTMENT_NAME" property="departmentName" />
		<result column="MANAGER_ID" property="managerId" />
		<result column="LOCATION_ID" property="locationId" />
	</resultMap>
	<resultMap type="EmpDTO" id="EmpMap">
		<result column="EMPLOYEE_ID" property="employeeId" />
		<result column="FIRST_NAME" property="firstName" />
		<result column="LAST_NAME" property="lastName" />
		<result column="EMAIL" property="email" />
		<result column="PHONE_NUMBER" property="phoneNumber" />
		<result column="HIRE_DATE" property="hireDate" />
		<result column="JOB_ID" property="jobId" />
		<result column="COMMISSION_PCT" property="commissionPct" />
		<result column="SALARY" property="salary" />
		<result column="MANAGER_ID" property="managerId" />
		<collection resultMap="DeptMap" property="deptDTO"></collection>
	</resultMap>

	<!-- 전체 조회 -->
	<select id="selectAllEmployeesCount" resultType="int">
		SELECT COUNT(*)
		  FROM EMPLOYEES
	</select>
	
	<select id="selectEmployeesByPage" parameterType="Map" resultMap="EmpMap">	<!-- parameterType은 그냥 타입 -->
		SELECT B.*
		  FROM (SELECT ROWNUM AS RN, A.*
		          FROM (SELECT E.*, D.DEPARTMENT_NAME, D.LOCATION_ID
		                  FROM DEPARTMENTS D RIGHT JOIN EMPLOYEES E
		                    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
		                  ORDER BY HIRE_DATE DESC) A) B
		 WHERE B.RN BETWEEN #{begin} AND #{end}
		 
		 <!--  
		 	WHERE B.RN BETWEEN #{begin} AND #{end}
		 	WHERE B.RN BETWEEN '1' AND '10'		문자열
		 	
		 	WHERE B.RN BETWEEN ${begin} AND ${end}
		 	WHERE B.RN BETWEEN 1 AND 10			숫자
		 -->
	</select>
	
	<select id="selectFindEmployeesCount" parameterType="Map" resultType="int">
		SELECT COUNT (*)
		  FROM EMPLOYEES E
		  <where>
			 <if test="column=='EMPLOYEE_ID' or column=='E.DEPARTMENT_ID'">${column} = #{query}</if>
			 <if test="column=='LAST_NAME' or column=='FIRST_NAME' or column=='PHONE_NUMBER'">${column} LIKE '%' || #{query} || '%'</if>	<!-- 쿼리문에서 || 문자열 연결 -->
			 <if test="column=='HIRE_DATE'">${column} BETWEEN TO_DATE(#{start}, 'yyyy-mm-dd') AND TO_DATE(#{stop}, 'yyyy-mm-dd')</if>
			 <if test="column=='SALARY'">${column} BETWEEN #{start} AND #{stop}</if>
		 </where>
		 <!-- 
		 	컬럼명은 ${ }로 불러온다.
		 	변수는 #{ } , ${ } 상관없다.
		  
		 	WHERE #{column} = #{query}		#{}는 작은 따옴표(')로 묶어서 값을 치환
		 	WHERE 'EMPLOYEE_ID' = '150'		잘못된 사용
		 	
		 	WHERE ${column} = #{query}		${}는 그냥 치환
		 	WHERE EMPLOYEE_ID = '150'		정상 동작
		 -->
	</select>
	
	<select id="selectFindEmployees" parameterType="Map" resultMap="EmpMap">
		SELECT B.*
		  FROM (SELECT ROWNUM AS RN, A.*
				  FROM (SELECT E.*, D.DEPARTMENT_NAME, D.LOCATION_ID
				  		  FROM DEPARTMENTS D RIGHT OUTER JOIN EMPLOYEES E
				  		    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
		  		       <where>
					       <if test="column=='EMPLOYEE_ID' or column=='E.DEPARTMENT_ID'">${column} = #{query}</if>
						   <if test="column=='LAST_NAME' or column=='FIRST_NAME' or column=='PHONE_NUMBER'">${column} LIKE '%' || #{query} || '%'</if>	<!-- 쿼리문에서 || 문자열 연결 -->
						   <if test="column=='HIRE_DATE'">${column} BETWEEN TO_DATE(#{start}, 'yyyy-mm-dd') AND TO_DATE(#{stop}, 'yyyy-mm-dd')</if>
						   <if test="column=='SALARY'">${column} BETWEEN #{start} AND #{stop}</if>
					  </where>
				 	    ORDER BY HIRE_DATE DESC) A) B
		 WHERE B.RN BETWEEN #{begin} AND #{end}
	</select>
	
	<select id="selectAutoCompleteList" parameterType="Map" resultType="EmpDTO">
		SELECT DISTINCT ${target}
		  FROM EMPLOYEES
		 WHERE ${target} LIKE CONCAT(#{param}, '%')
	</select>
 
</mapper>